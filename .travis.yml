dist: trusty
group: edge
language: php

addons:
  chrome: stable

php:
  - 7.1
  - 5.6

notifications:
  webhooks:
    urls:
      - http://ec2-54-244-218-244.us-west-2.compute.amazonaws.com/issue
    on_success: never
    on_failure: always
    on_start: never
    on_cancel: never
    on_error: always

env:
  global:
    - PROJECT_NAME=contentacms
    - PROJECT_BASE_PATH=$HOME/$PROJECT_NAME
    - PROJECT_RELEASE_BRANCH=${PROJECT_RELEASE_BRANCH:-8.x-1.x}

branches:
  only:
    - 8.x-1.x

before_install:
  # Fixes Composer exhausting the memory when using PHP 5.6.
  - echo "memory_limit=-1" >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini
  - nvm install 6.11.0
  - php -r "echo ini_get('memory_limit').PHP_EOL;"
  - nvm use 6.11.0
  # Repo for Yarn
  - sudo apt-key adv --keyserver pgp.mit.edu --recv D101F7899D41F3C3
  - echo "deb http://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq yarn
  - mkdir $PROJECT_BASE_PATH

install:
  - yarn install
  - composer run-script install-contenta $PROJECT_BASE_PATH --timeout=0


before_script:
  - export DISPLAY=:99.0
  # Prevent chrome deadlock when running Nightwatch tests.
  # See https://stackoverflow.com/questions/41487659/nightwatch-selenium-socket-hang-up
  - export DBUS_SESSION_BUS_ADDRESS=/dev/null
  - sh -e /etc/init.d/xvfb start
  - sleep 3 # give xvfb some time to start
  - composer run-script start-contenta $PROJECT_BASE_PATH --timeout=0 &
  - sleep 5 # give web server some time to start

script:
  - yarn run nightwatch

after_script:
  - killall php

# This stanza creates Travis Stages that are sequentially dependent.
jobs:
  include:
    # Deployment Stage
    # This stage promotes a successful artifact from the deployment branch to Github
    - stage: Release
      php: 7.1
      install:
        - composer run-script install-contenta $PROJECT_BASE_PATH --timeout=0
      before_script: skip
      script: skip
      before_deploy:
        # Set Deployment Variable
        - RELEASE_DATE=$( date +%Y-%m-%d)
        - TRAVIS_TAG="${PROJECT_NAME}_release-${RELEASE_DATE}_build_${TRAVIS_BUILD_NUMBER}"
        # Clean the Contenta Profile Folder
        - ./scripts/deployment/travis_before_deploy.sh contentacms_profile_cleanup "$PROJECT_BASE_PATH/web"
        # Remove Site files
        - ./scripts/deployment/travis_before_deploy.sh rm_site "$PROJECT_BASE_PATH/web"
        # Zip Folder
        - ./scripts/deployment/travis_before_deploy.sh zip_folder "$HOME" "$PROJECT_NAME" "$TRAVIS_TAG"

      deploy:
        provider: releases
        api_key:
          secure: $SECURE_TOKEN
        file: "$TRAVIS_TAG.zip"
        skip_cleanup: true
        name: "Release: ${RELEASE_DATE} build ${TRAVIS_BUILD_NUMBER}"
        on:
          # Only release if it $PROJECT_RELEASE_BRANCH gets updated
          branch: $PROJECT_RELEASE_BRANCH
          repo: "contentacms/contenta_jsonapi"
